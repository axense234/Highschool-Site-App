generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Announcement {
  announcement_uid String @id @unique @default(uuid())
  id               String @default("")

  title          String
  description    String
  category       AnnouncementCategory @default(GENERALE)
  img_url        String?
  video_url      String?
  video_pozition VideoPozition?       @default(INCEPUT)

  created_by_admin      Admin?  @relation(fields: [created_by_admin_uid, created_by_admin_name], references: [admin_uid, fullname])
  created_by_admin_uid  String?
  created_by_admin_name String?

  created_by_teacher      Teacher? @relation(fields: [created_by_teacher_uid, created_by_teacher_name], references: [teacher_uid, fullname])
  created_by_teacher_uid  String?
  created_by_teacher_name String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Admin {
  admin_uid String @id @unique @default(uuid())
  id        String @default("")

  profile_img_url String @default("https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y")
  fullname        String
  email           String @unique
  password        String

  books_created         Book[]
  classes_created       Class[]
  announcements_created Announcement[]

  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([admin_uid, fullname])
}

model Student {
  student_uid String @id @unique @default(uuid())
  id          String @default("")

  profile_img_url String @default("https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y")
  fullname        String
  email           String @unique
  password        String

  class       Class?  @relation(fields: [class_uid, class_label], references: [class_uid, label], name: "class")
  class_uid   String?
  class_label String?

  student_card     StudentCard?
  student_card_uid String?

  role      String   @default("ELEV")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Teacher {
  teacher_uid String @id @unique @default(uuid())
  id          String @default("")

  profile_img_url String   @default("https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y")
  subject         Subjects
  fullname        String
  email           String   @unique
  password        String
  description     String

  announcements_created Announcement[]
  books_created         Book[]
  classes               Class[]              @relation(name: "many")
  sections              StudentCardSection[]

  master_class       Class?
  master_class_uid   String?
  master_class_label String?

  master_catalogue     StudentCatalogue?
  master_catalogue_uid String?

  role   String  @default("PROFESOR")
  master Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([teacher_uid, fullname])
}

model Class {
  class_uid String @id @unique @default(uuid())
  id        String @default("")

  label     String  @unique @default("Class Label")
  public    Boolean @default(false)
  image_url String  @default("https://res.cloudinary.com/birthdayreminder/image/upload/v1686921592/Highschool%20Site%20App/IMG-20230614-WA0020_paxhx6.jpg")

  created_by_admin     Admin?  @relation(fields: [created_by_admin_uid], references: [admin_uid])
  created_by_admin_uid String?

  master_teacher      Teacher? @relation(fields: [master_teacher_uid, master_teacher_name], references: [teacher_uid, fullname])
  master_teacher_uid  String?  @unique
  master_teacher_name String?

  catalogue     StudentCatalogue?
  catalogue_uid String?

  students Student[] @relation(name: "class")
  teachers Teacher[] @relation(name: "many")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([class_uid, label])
  @@unique([master_teacher_uid, master_teacher_name])
}

model StudentCatalogue {
  catalogue_uid String @id @unique @default(uuid())
  id            String @default("")

  label    String        @default("Nume Catalog")
  sections StudentCard[]

  master_teacher     Teacher? @relation(fields: [master_teacher_uid], references: [teacher_uid])
  master_teacher_uid String?  @unique

  class     Class?  @relation(fields: [class_uid], references: [class_uid])
  class_uid String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model StudentCard {
  student_card_uid String @id @unique @default(uuid())
  id               String @default("")

  student_catalogue StudentCatalogue? @relation(fields: [catalogue_uid], references: [catalogue_uid])
  catalogue_uid     String?

  student     Student? @relation(fields: [student_uid], references: [student_uid])
  student_uid String?  @unique

  content StudentCardSection[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model StudentCardSection {
  card_section_uid String @id @unique @default(uuid())
  id               String @default("")

  student_card     StudentCard @relation(fields: [student_card_uid], references: [student_card_uid], onDelete: Cascade)
  student_card_uid String

  subject     Subjects
  teacher     Teacher? @relation(fields: [teacher_uid], references: [teacher_uid])
  teacher_uid String?

  grades   Grade[]
  absences Absence[]
}

model Absence {
  absence_uid String @id @unique @default(uuid())
  id          String @default("")

  card_section     StudentCardSection? @relation(fields: [card_section_uid], references: [card_section_uid])
  card_section_uid String?

  date     DateTime @default(now())
  reasoned Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Grade {
  grade_uid String @id @unique @default(uuid())
  id        String @default("")

  card_section     StudentCardSection? @relation(fields: [card_section_uid], references: [card_section_uid])
  card_section_uid String?

  date  DateTime @default(now())
  value Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Book {
  book_uid String @id @unique @default(uuid())
  id       String @default("")

  created_by_teacher     Teacher? @relation(fields: [created_by_teacher_uid], references: [teacher_uid])
  created_by_teacher_uid String?
  created_by_admin       Admin?   @relation(fields: [created_by_admin_uid], references: [admin_uid])
  created_by_admin_uid   String?

  title        String  @default("Book Title")
  author       String  @default("Book Author")
  pdf_file_url String?
  description  String  @default("Book Description")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum Subjects {
  MATEMATICA
  FIZICA
  CHIMIE
  INFORMATICA
  INFORMATICA_OPTIONAL

  ENGLEZA
  ROMANA
  FRANCEZA
  GERMANA
  LATINA

  BIOLOGIE
  GEOGRAFIE
  ISTORIE
  PSIHOLOGIE

  SPORT
  DESEN
  MUZICA
  RELIGIE
}

enum AnnouncementCategory {
  GENERALE
  SPECIALE
  PROFESORI
  ELEVI
}

enum VideoPozition {
  INCEPUT
  FINAL
}
